% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Alkaid.R
\name{scATACPip}
\alias{scATACPip}
\title{Run a post-quantification 10X technology-format scATAC Transcriptomics pipeline}
\usage{
scATACPip(
  project_name = "Ursa_scATAC",
  input_dir = "./",
  output_dir = "./",
  pheno_file,
  signac.createchromatinassay.min.cells = 10,
  signac.createchromatinassay.min.features = 200,
  signac.createchromatinassay.max.cells = NULL,
  signac.createchromatinassay.ranges = NULL,
  signac.createchromatinassay.motifs = NULL,
  signac.createchromatinassay.annotation = NULL,
  signac.createchromatinassay.bias = NULL,
  signac.createchromatinassay.positionEnrichment = NULL,
  signac.createchromatinassay.validate.fragments = TRUE,
  signac.tssenrichment.tss.positions = NULL,
  signac.tssenrichment.n = NULL,
  signac.tssenrichment.fast = FALSE,
  signac.tssenrichment.assay = NULL,
  signac.tssenrichment.cells = NULL,
  signac.tssenrichment.process_n = 2000,
  signac.min.peak_region_fragments = 3000,
  signac.max.peak_region_fragments = 20000,
  signac.min.ncount_peaks = 1000,
  signac.max.ncount_peaks = 1e+05,
  signac.min.pct_reads_in_peaks = 15,
  signac.max.blacklist_ratio = 0.05,
  signac.max.nucleosome_signal = 4,
  signac.min.tss_enrichment = 2,
  signac.min.ncount_rna = 1000,
  signac.max.ncount_rna = 25000,
  signac.min.nfeature_rna = 200,
  signac.max.nfeature_rna = 2500,
  signac.max.percent_mito = 10,
  signac.runtfidf.assay = NULL,
  signac.runtfidf.method = 1,
  signac.runtfidf.scale.factor = 10000,
  signac.runtfidf.idf = NULL,
  signac.findtopfeatures.assay = NULL,
  signac.findtopfeatures.min.cutoff = "q0",
  runsvd.assay = NULL,
  runsvd.features = NULL,
  runsvd.n = 50,
  runsvd.reduction.key = "LSI_",
  runsvd.reduction.name = "lsi",
  runsvd.scale.max = NULL,
  signac.depthcor.assay = NULL,
  signac.depthcor.reduction = "lsi",
  signac.depthcor.n = 10,
  signac.runumap.lsi.dimension = 30,
  seurat.runumap.features = NULL,
  seurat.runumap.graph = NULL,
  seurat.runumap.assay = NULL,
  seurat.runumap.nn.name = NULL,
  seurat.runumap.slot = "data",
  seurat.runumap.umap.method = "uwot",
  seurat.runumap.reduction.model = NULL,
  seurat.runumap.return.model = FALSE,
  seurat.runumap.n.neighbors = 30L,
  seurat.runumap.n.components = 2L,
  seurat.runumap.metric = "cosine",
  seurat.runumap.n.epochs = NULL,
  seurat.runumap.learning.rate = 1,
  seurat.runumap.min.dist = 0.3,
  seurat.runumap.spread = 1,
  seurat.runumap.set.op.mix.ratio = 1,
  seurat.runumap.local.connectivity = 1L,
  seurat.runumap.repulsion.strength = 1,
  seurat.runumap.negative.sample.rate = 5L,
  seurat.runumap.a = NULL,
  seurat.runumap.b = NULL,
  seurat.runumap.uwot.sgd = FALSE,
  seurat.runumap.seed.use = 42L,
  seurat.runumap.metric.kwds = NULL,
  seurat.runumap.angular.rp.forest = FALSE,
  seurat.runumap.densmap = FALSE,
  seurat.runumap.dens.lambda = 2,
  seurat.runumap.dens.frac = 0.3,
  seurat.runumap.dens.var.shift = 0.1,
  seurat.runumap.verbose = TRUE,
  seurat.runumap.reduction.name = "umap",
  seurat.runumap.reduction.key = "UMAP_",
  seurat.findneighbors.assay = NULL,
  seurat.findneighbors.features = NULL,
  seurat.findneighbors.k.param = 20,
  seurat.findneighbors.return.neighbor = FALSE,
  seurat.findneighbors.prune.SNN = 1/15,
  seurat.findneighbors.nn.method = "annoy",
  seurat.findneighbors.n.trees = 50,
  seurat.findneighbors.annoy.metric = "euclidean",
  seurat.findneighbors.nn.eps = 0,
  seurat.findneighbors.verbose = TRUE,
  seurat.findneighbors.force.recalc = FALSE,
  seurat.findneighbors.do.plot = FALSE,
  seurat.findneighbors.graph.name = NULL,
  seurat.findneighbors.l2.norm = FALSE,
  seurat.findneighbors.cache.index = FALSE,
  seurat.findclusters.graph.name = NULL,
  seurat.findclusters.modularity.fxn = 1,
  seurat.findclusters.initial.membership = NULL,
  seurat.findclusters.node.sizes = NULL,
  seurat.findclusters.resolution = 0.8,
  seurat.findclusters.method = "matrix",
  seurat.findclusters.algorithm = 3,
  seurat.findclusters.n.start = 10,
  seurat.findclusters.n.iter = 1000,
  seurat.findclusters.random.seed = 0,
  seurat.findclusters.group.singletons = TRUE,
  seurat.findclusters.temp.file.location = NULL,
  seurat.findclusters.edge.file.name = NULL,
  seurat.findclusters.verbose = TRUE,
  seurat.peaks.findallmarkers.assay = NULL,
  seurat.peaks.findallmarkers.features = NULL,
  seurat.peaks.findallmarkers.logfc.threshold = 0.25,
  seurat.peaks.findallmarkers.test.use = "LR",
  seurat.peaks.findallmarkers.slot = "data",
  seurat.peaks.findallmarkers.min.pct = 0.2,
  seurat.peaks.findallmarkers.min.diff.pct = -Inf,
  seurat.peaks.findallmarkers.node = NULL,
  seurat.peaks.findallmarkers.verbose = TRUE,
  seurat.peaks.findallmarkers.only.pos = FALSE,
  seurat.peaks.findallmarkers.max.cells.per.ident = Inf,
  seurat.peaks.findallmarkers.random.seed = 1,
  seurat.peaks.findallmarkers.latent.vars = NULL,
  seurat.peaks.findallmarkers.min.cells.feature = 3,
  seurat.peaks.findallmarkers.min.cells.group = 3,
  seurat.peaks.findallmarkers.mean.fxn = NULL,
  seurat.peaks.findallmarkers.fc.name = NULL,
  seurat.peaks.findallmarkers.base = 2,
  seurat.peaks.findallmarkers.return.thresh = 0.05,
  seurat.peaks.findallmarkers.densify = FALSE,
  peaks.findallmarkers.padjust_threshold = 0.1,
  peaks.findallmarkers.multipletestingcorrection = "bonferroni",
  seurat.geneactivity.assay = NULL,
  seurat.geneactivity.features = NULL,
  seurat.geneactivity.extend.upstream = 2000,
  seurat.geneactivity.extend.downstream = 0,
  seurat.geneactivity.biotypes = "protein_coding",
  seurat.geneactivity.max.width = 5e+05,
  seurat.geneactivity.process_n = 2000,
  seurat.geneactivity.gene.id = FALSE,
  seurat.createassayobject.min.cells = 0,
  seurat.createassayobject.min.features = 0,
  seurat.createassayobject.check.matrix = FALSE,
  seurat.normalizedata.assay = NULL,
  seurat.normalizedata.normalization.method = "LogNormalize",
  seurat.normalizedata.scale.factor = 10000,
  seurat.normalizedata.margin = 1,
  seurat.scaledata.features = NULL,
  seurat.scaledata.vars.to.regress = NULL,
  seurat.scaledata.split.by = NULL,
  seurat.scaledata.model.use = "linear",
  seurat.scaledata.use.umi = FALSE,
  seurat.scaledata.do.scale = TRUE,
  seurat.scaledata.do.center = TRUE,
  seurat.scaledata.scale.max = 10,
  seurat.scaledata.block.size = 1000,
  seurat.scaledata.min.cells.to.block = 3000,
  seurat.geneactivity.findallmarkers.assay = NULL,
  seurat.geneactivity.findallmarkers.features = NULL,
  seurat.geneactivity.findallmarkers.logfc.threshold = 0.25,
  seurat.geneactivity.findallmarkers.test.use = "wilcox",
  seurat.geneactivity.findallmarkers.slot = "data",
  seurat.geneactivity.findallmarkers.min.pct = 0.25,
  seurat.geneactivity.findallmarkers.min.diff.pct = -Inf,
  seurat.geneactivity.findallmarkers.node = NULL,
  seurat.geneactivity.findallmarkers.verbose = TRUE,
  seurat.geneactivity.findallmarkers.only.pos = FALSE,
  seurat.geneactivity.findallmarkers.max.cells.per.ident = Inf,
  seurat.geneactivity.findallmarkers.random.seed = 1,
  seurat.geneactivity.findallmarkers.latent.vars = NULL,
  seurat.geneactivity.findallmarkers.min.cells.feature = 3,
  seurat.geneactivity.findallmarkers.min.cells.group = 3,
  seurat.geneactivity.findallmarkers.mean.fxn = NULL,
  seurat.geneactivity.findallmarkers.fc.name = NULL,
  seurat.geneactivity.findallmarkers.base = 2,
  seurat.geneactivity.findallmarkers.return.thresh = 0.05,
  seurat.geneactivity.findallmarkers.densify = FALSE,
  geneactivity.findallmarkers.padjust_threshold = 0.1,
  geneactivity.findallmarkers.multipletestingcorrection = "bonferroni",
  signac.regionstats.assay = NULL,
  signac.linkpeaks.peak.slot = "counts",
  signac.linkpeaks.expression.slot = "data",
  signac.linkpeaks.method = "pearson",
  signac.linkpeaks.gene.coords = NULL,
  signac.linkpeaks.distance = 5e+05,
  signac.linkpeaks.min.distance = NULL,
  signac.linkpeaks.min.cells = 10,
  signac.linkpeaks.genes.use = NULL,
  signac.linkpeaks.n_sample = 200,
  signac.linkpeaks.pvalue_cutoff = 0.05,
  signac.linkpeaks.score_cutoff = 0.05,
  signac.linkpeaks.gene.id = FALSE,
  signac.addmotifs.assay = NULL,
  signac.footprint.regions = NULL,
  signac.footprint.assay = NULL,
  signac.findmotifs.background = 40000,
  signac.findmotifs.assay = NULL,
  signac.findmotifs.p.adjust.method = "BH",
  signac.runchromvar.motif.matrix = NULL,
  signac.runchromvar.assay = NULL,
  signac.post_combined_peaks.max.peaks = 10000,
  signac.post_combined_peaks.min.peaks = 20
)
}
\arguments{
\item{project_name}{Project name. 'Ursa_scATAC' by default.}

\item{input_dir}{Directory to all input files. Current working directory by
default.}

\item{output_dir}{Output directory. Current working directory by default.
A new folder with the given project name with time stamp as suffix will be
created under the specified output directory.}

\item{pheno_file}{Meta data file directory. Accept only .csv/.txt format
files.}

\item{peaks.findallmarkers.padjust_threshold}{Threshold for retaining entries
in the FindAllMarkers differentially accessible peaks for the 'peaks' assay
with corrected p-values. Default to 0.1.}

\item{peaks.findallmarkers.multipletestingcorrection}{Correction method for
multiple testing for the 'peaks' assay. Default to "benferroni".
Methods include: "holm", "hochberg", "hommel", "bonferroni", "BH", "BY",
"fdr", "none". (refer to the p.adjust() function in stats package for details).}

\item{geneactivity.findallmarkers.padjust_threshold}{Threshold for retaining entries
in the FindAllMarkers differentially expressed genes for the 'ACTIVITY' assay
with corrected p-values. Default to 0.1.}

\item{geneactivity.findallmarkers.multipletestingcorrection}{Correction method for
multiple testing for the 'ACTIVITY' assay if gene expression is quantified from the
scATAC-seq data. Default to "benferroni". Methods include: "holm", "hochberg",
"hommel", "bonferroni", "BH", "BY", "fdr", "none". (refer to the p.adjust()
function in stats package for details).}
}
\description{
This function will run a bioinformatics analysis of post-quantification scATAC
pipeline. Supports multiple samples analysis.
}
