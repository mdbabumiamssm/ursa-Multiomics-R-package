% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Merak.R
\name{FlowPip}
\alias{FlowPip}
\title{Run a post-quantification 10X technology-format Flow Cytometry pipeline}
\usage{
FlowPip(
  project_name = "Ursa_Flow",
  input_dir = "./",
  output_dir = "./",
  pheno_file,
  cofactor = 150,
  flowcore.read.flowset.pattern = ".fcs",
  flowcore.read.flowset.phenoData = NULL,
  flowcore.read.flowset.descriptions = NULL,
  flowcore.read.flowset.name.keyword = NULL,
  flowcore.read.flowset.alter.names = TRUE,
  flowcore.read.flowset.which.lines = NULL,
  flowcore.read.flowset.column.pattern = NULL,
  flowcore.read.flowset.invert.pattern = FALSE,
  flowcore.read.flowset.decades = 0,
  flowcore.read.flowset.sep = "\\t",
  flowcore.read.flowset.as.is = TRUE,
  flowcore.read.flowset.name = NULL,
  flowcore.read.flowset.ncdf = FALSE,
  flowcore.read.flowset.dataset = NULL,
  flowcore.read.flowset.min.limit = NULL,
  flowcore.read.flowset.truncate_max_range = TRUE,
  flowcore.read.flowset.emptyValue = TRUE,
  flowcore.read.flowset.ignore.text.offset = FALSE,
  flowcore.read.flowset.channel_alias = NULL,
  cytoexplorer.cyto_transform.trans = NULL,
  cytoexplorer.cyto_transform.channels = NULL,
  cytoexplorer.cyto_transform.parent = "root",
  cytoexplorer.cyto_transform.select = NULL,
  cytoexplorer.cyto_transform.inverse = FALSE,
  cytoexplorer.cyto_transform.plot = TRUE,
  cytoexplorer.cyto_transform.popup = FALSE,
  cytoexplorer.cyto_transform.axes_limits = "machine",
  limma.plotmds.top = 500,
  limma.plotmds.gene.selection = "pairwise",
  stats.prcomp.retx = TRUE,
  stats.prcomp.center = TRUE,
  stats.prcomp.scale. = FALSE,
  stats.prcomp.tol = NULL,
  stats.prcomp.rank. = NULL,
  samplecluster.hclust.method = "complete",
  flowsom.readinput.pattern = ".fcs",
  flowsom.readinput.compensate = FALSE,
  flowsom.readinput.spillover = NULL,
  flowsom.readinput.transform = FALSE,
  flowsom.readinput.toTransform = NULL,
  flowsom.readinput.transformFunction = flowCore::arcsinhTransform(),
  flowsom.readinput.transformList = NULL,
  flowsom.readinput.scale = FALSE,
  flowsom.readinput.scaled.center = TRUE,
  flowsom.readinput.scaled.scale = TRUE,
  flowsom.readinput.silent = FALSE,
  flowsom.buildsom.colsToUse = NULL,
  flowsom.buildsom.silent = FALSE,
  flowsom.buildsom.outlierMAD = 4,
  consensusclusterplus.reps = 50,
  consensusclusterplus.pItem = 0.9,
  consensusclusterplus.pFeature = 1,
  consensusclusterplus.clusterAlg = "hc",
  consensusclusterplus.title = "untitled_consensus_cluster",
  consensusclusterplus.innerLinkage = "complete",
  consensusclusterplus.finalLinkage = "complete",
  consensusclusterplus.distance = "euclidean",
  consensusclusterplus.ml = NULL,
  consensusclusterplus.tmyPal = NULL,
  consensusclusterplus.seed = 1234,
  consensusclusterplus.weightsItem = NULL,
  consensusclusterplus.weightsFeature = NULL,
  consensusclusterplus.corUse = "everything",
  cellcluster.hclust.method = "complete",
  seurat.createseuratobject.min.cells = 3,
  seurat.scaledata.features = NULL,
  seurat.scaledata.vars.to.regress = NULL,
  seurat.scaledata.split.by = NULL,
  seurat.scaledata.model.use = "linear",
  seurat.scaledata.use.umi = FALSE,
  seurat.scaledata.do.scale = TRUE,
  seurat.scaledata.do.center = TRUE,
  seurat.scaledata.scale.max = 10,
  seurat.scaledata.block.size = 1000,
  seurat.scaledata.min.cells.to.block = 3000,
  seurat.findvariablefeatures.selection.method = "vst",
  seurat.findvariablefeatures.loess.span = 0.3,
  seurat.findvariablefeatures.clip.max = "auto",
  seurat.findvariablefeatures.num.bin = 20,
  seurat.findvariablefeatures.binning.method = "equal_width",
  seurat.findvariablefeatures.nfeatures = 2000,
  seurat.findvariablefeatures.mean.cutoff = c(0.1, 8),
  seurat.findvariablefeatures.dispersion.cutoff = c(1, Inf),
  seurat.runpca.assay = NULL,
  seurat.runpca.features = NULL,
  seurat.runpca.npcs = 50,
  seurat.runpca.rev.pca = FALSE,
  seurat.runpca.weight.by.var = TRUE,
  seurat.runpca.verbose = TRUE,
  seurat.runpca.ndims.print = 1:5,
  seurat.runpca.nfeatures.print = 30,
  seurat.runpca.reduction.name = "pca",
  seurat.runpca.reduction.key = "PC_",
  seurat.runpca.seed.use = 42,
  seurat.runumap.pcs = 30,
  seurat.runumap.features = NULL,
  seurat.runumap.graph = NULL,
  seurat.runumap.nn.name = NULL,
  seurat.runumap.slot = "data",
  seurat.runumap.umap.method = "uwot",
  seurat.runumap.reduction.model = NULL,
  seurat.runumap.return.model = FALSE,
  seurat.runumap.n.neighbors = 30L,
  seurat.runumap.n.components = 2L,
  seurat.runumap.metric = "cosine",
  seurat.runumap.n.epochs = NULL,
  seurat.runumap.learning.rate = 1,
  seurat.runumap.min.dist = 0.3,
  seurat.runumap.spread = 1,
  seurat.runumap.set.op.mix.ratio = 1,
  seurat.runumap.local.connectivity = 1L,
  seurat.runumap.repulsion.strength = 1,
  seurat.runumap.negative.sample.rate = 5L,
  seurat.runumap.a = NULL,
  seurat.runumap.b = NULL,
  seurat.runumap.uwot.sgd = FALSE,
  seurat.runumap.seed.use = 42L,
  seurat.runumap.metric.kwds = NULL,
  seurat.runumap.angular.rp.forest = FALSE,
  seurat.runumap.densmap = FALSE,
  seurat.runumap.dens.lambda = 2,
  seurat.runumap.dens.frac = 0.3,
  seurat.runumap.dens.var.shift = 0.1,
  seurat.runumap.verbose = TRUE,
  seurat.runumap.reduction.name = "umap",
  seurat.runumap.reduction.key = "UMAP_",
  stats.prcomp.somcodes.retx = TRUE,
  stats.prcomp.somcodes.center = TRUE,
  stats.prcomp.somcodes.scale. = FALSE,
  stats.prcomp.somcodes.tol = NULL,
  stats.prcomp.somcodes.rank. = NULL,
  min.cluster.medianexpr.fc = 1.25,
  min.cluster.num.cells = 3,
  min.somnode.medianexpr.fc = 1.25,
  min.somnode.num.cells = 3
)
}
\arguments{
\item{project_name}{Project name. 'Ursa_Flow' by default.}

\item{input_dir}{Directory to all input files. Current working directory by
default.}

\item{output_dir}{Output directory. Current working directory by default.
A new folder with the given project name with time stamp as suffix will be
created under the specified output directory.}

\item{pheno_file}{Meta data file directory. Accept only .csv/.txt format
files.}

\item{cofactor}{Cofactor for arcsinh (inverse hyperbolic sine) transformation.
Cofactor = 150 by default.}

\item{...}{Arguments passed to other parameters in the dependency pages.
Parameters with the long format: xxx.xxx.xxx usually indicates in lowercases
the parameter origin: <dependent package name>.<function name>.<parameter name>(),
for example: flowcore.read.flowset.pattern() indicates this parameter 
originates from the package flowCore under the function read.flowSet() and its
parameter 'pattern'. Users could subsequently refer to the dependency 
package for detailed information on parameters and their usage.}
}
\description{
This function will run a bioinformatics analysis of post-quantification Flow
pipeline. Supports multiple samples analysis.
}
